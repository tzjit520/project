<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<description>Spring Configuration</description>
	
	<!-- 1. 数据源配置     加载属性文件        location：表示属性文件位置，多个之间通过如逗号/分号等分隔             ignore-unresolvable：是否忽略解析不到的属性，如果不忽略，找不到将抛出异常  -->
	<context:property-placeholder ignore-unresolvable="false" location="classpath:system-config.properties,classpath:jdbc.properties" />

	<!-- 打开使用注解自动检测功能自动注册Bean，只扫描@Service不扫描@Controller  base-package 如果多个，用“,”分隔   -->
	<context:component-scan base-package="com.jtgl,com.platform" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<!-- 扫描其它指定包  -->
	<context:component-scan base-package="com.jtgl.socket.config,com.platform.generator.util,com.platform.config"></context:component-scan>
	
    <!-- proxy-target-class="true"和proxy-target-class="false"的区别，为true则是基于类的代理将起作用（需要cglib库），为false或者省略这个属性，则标准的JDK 基于接口的代理将起作用 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- getBean工具类 -->
	<bean class="com.platform.utils.SpringUtil" lazy-init="false" />

	<!-- 统一日志管理-->
	<bean id="logAspect" class="com.platform.system.log.aop.LogAspect"/>
	
	<!-- 配置freeMarker模板加載地址 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="classpath:templates/" />
    </bean>
  
</beans>