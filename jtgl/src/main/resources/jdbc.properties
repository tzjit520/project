## jdbc.properties

#oracle dababase config
#jdbc.oracle.driver=oracle.jdbc.driver.OracleDriver
#jdbc.oracle.url=jdbc:oracle:thin:@10.128.93.36:1521:center
#jdbc.oracle.username=PF_STRUTS2
#jdbc.oracle.password=PF_STRUTS2

#mysql database config
jdbc.mysql.driver=com.mysql.jdbc.Driver
jdbc.mysql.url=jdbc:mysql://localhost:3306/tzj?useUnicode=true&characterEncoding=UTF-8
jdbc.mysql.username=root
jdbc.mysql.password=123456


jdbc.mysql.driver1=com.mysql.jdbc.Driver
jdbc.mysql.url1=jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=UTF-8
jdbc.mysql.username1=root
jdbc.mysql.password1=123456

#####  druid连接池配置  #####
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时 *参见DBCP中的initialSize属性
initialSize=0
# 最小连接池数量
minIdle=1
# 最大连接池数量
maxActive=20
# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
maxWait=60000
# Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据
timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
minEvictableIdleTimeMillis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
validationQuery=SELECT 1
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
testOnReturn=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启
poolPreparedStatements=false
# 指定每个PSCache连接上PSCache的大小
maxPoolPreparedStatementPerConnectionSize=20
# 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 1）监控统计用的filter:stat 2）日志用的filter:log4j 3）防御sql注入的filter:wall
filters=stat
# 合并多个DruidDataSource的监控数据
useGlobalDataSourceStat=true