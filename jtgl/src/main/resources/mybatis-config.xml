<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">  

<configuration>  
    <!-- 参数设置 -->  
    <settings>
        <!-- 配置使全局的映射器启用或禁用缓存 -->
        <setting name="cacheEnabled" value="true" />  
        <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。通过使用fetchType属性，可以取代特定关系的该值 -->
        <setting name="lazyLoadingEnabled" value="true" />  
        <!-- 允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动） -->
        <setting name="multipleResultSetsEnabled" value="true" />  
        <!-- 使用列标签代替列名。不同的驱动在这方便表现不同。 -->
        <setting name="useColumnLabel" value="true" />  
        <!-- 允许JDBC支持生成的键。需要适合的驱动。如果设置为true则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如Derby） -->
        <setting name="useGeneratedKeys" value="false" />  
        <!-- 指定MyBatis如何自动映射列到字段/属性.PARTIAL只会自动映射简单，没有嵌套的结果.FULL会自动映射任意复杂的结果（嵌套的或其他情况） -->
        <setting name="autoMappingBehavior" value="PARTIAL" />  
        <!-- 配置默认的执行器.SIMPLE执行器没有什么特别的处理.REUSE执行器重用预处理语句.BATCH执行器重用语句和批量更新 -->
        <setting name="defaultExecutorType" value="SIMPLE" />  
        <!-- 启用从传统数据库列名称A_COLUMN到骆驼案例经典Java属性名称aColumn的自动映射。 -->
        <setting name="mapUnderscoreToCamelCase" value="false" />  
        <!-- MyBatis使用本地缓存来防止循环引用并加速重复的嵌套查询。默认情况下（SESSION）会话中执行的所有查询都被缓存。如果localCacheScope = STATEMENT本地会话仅用于执行语句，则不会在对同一个SqlSession的两个不同调用之间共享数据 -->
        <setting name="localCacheScope" value="SESSION" />  
        <!-- 当没有为参数提供特定的JDBC类型时，指定空值的JDBC类型。某些驱动程序需要指定列JDBC类型，但其他驱动程序则使用NULL，VARCHAR或OTHER等通用值。 -->
        <setting name="jdbcTypeForNull" value="NULL" />  
        <!-- 指定哪些对象的方法触发延迟加载 -->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" /> 
        <!-- 打印查询语句   SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING  -->
        <!-- <setting name="logImpl" value="STDOUT_LOGGING" /> -->
    </settings>
	
    <!-- 别名定义 -->  
    <typeAliases>  
        <typeAlias alias="TestUser" type="com.jtgl.test.model.TestUser" />  
    </typeAliases>

    <!--plugins插件之 分页拦截器  -->
    <plugins>
    	<plugin interceptor="com.github.pagehelper.PageHelper">
	        <!-- 4.0.0以后版本可以不设置该参数 -->
	        <!--<property name="dialect" value="mysql"/>-->
	        <!-- 该参数默认为false -->
	        <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
	        <!-- 和startPage中的pageNum效果一样-->
	        <property name="offsetAsPageNum" value="true"/>
	        <!-- 该参数默认为false -->
	        <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
	        <property name="rowBoundsWithCount" value="true"/>
	        <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
	        <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
	        <property name="pageSizeZero" value="true"/>
	        <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
	        <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
	        <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
	        <property name="reasonable" value="true"/>
    	</plugin>
    </plugins>

</configuration>